# Development CI Script
#
# This script kicks off a build for every event excluding commits pushed to the
# master branch. This includes pull requests and page builds to any branch.
---
name: GitAhead (stage)
on:
  push:
    branches-ignore:
      - master
  pull_request:
  page_build:
jobs:
  build:
    runs-on: ${{ matrix.env.os }}
    strategy:
      fail-fast: false
      matrix:
        env:
          - name: linux
            os: ubuntu-latest
            ninja_platform: linux
            qt_platform: linux
            arch: linux-x86_64
            cmake_env: {}
          - name: mac
            os: macos-latest
            ninja_platform: mac
            qt_platform: mac
            arch: darwin64-x86_64-cc
            cmake_env: {}
          - name: win
            os: windows-latest
            ninja_platform: win
            qt_platform: windows
            arch: VC-WIN64A
            cmake_env:
              CC: cl
              CXX: cl
    steps:
      - uses: actions/checkout@v1
      - name: Initialize Submodules
        uses: snickerbockers/submodules-init@v4
      - name: Install Perl
        if: matrix.env.name == 'win'
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: '5.30'
      - name: Install Nmake
        if: matrix.env.name == 'win'
        uses: seanmiddleditch/gha-setup-vsdevenv@v3
      - name: Install NASM
        if: matrix.env.name == 'win'
        uses: ilammy/setup-nasm@v1.2.0
      - name: Build OpenSSL (linux)
        if: matrix.env.name == 'linux'
        run: |
          cd dep/openssl/openssl
          ./config -fPIC
          make
      - name: Build OpenSSL (mac)
        if: matrix.env.name == 'mac'
        run: |
          cd dep/openssl/openssl
          ./Configure ${{ matrix.env.arch }} no-shared
          make
      - name: Build OpensSSL (win)
        if: matrix.env.name == 'win'
        run: |
          cd dep/openssl/openssl
          perl Configure VC-WIN64A
          nmake
      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@v3
        with:
          version: 1.9.0
          platform: ${{ matrix.env.ninja_platform }}
          destination: ninja
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.13.0
        timeout-minutes: 10
        with:
          version: 5.12.5
          target: desktop
          host: ${{ matrix.env.qtplatform }}
          install-deps: true
          modules: qtwebengine
      - name: Configure Release
        env: ${{ matrix.env.cmake_env }}
        run: |
          mkdir -p build/release
          cd build/release
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ../..
      - name: Build Information
        run: |
          echo "ninja version: $(ninja --version)"
          git --version
          qmake --version
          cmake --version
      - name: Build
        run: |
          cd build/release
          ninja
      - name: Test
        continue-on-error: true
        run: |
          cd build/release
          ninja check
...
